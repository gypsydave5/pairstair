.\" Automatically generated by Pandoc 3.7.0.2
.\"
.TH "PAIRSTAIR" "1" "" "" "User Commands"
.SH NAME
pairstair \- visualize and optimize software developer pairing from git
history
.SH SYNOPSIS
\f[B]pairstair\f[R] [\f[B]\-window\f[R] \f[I]window\f[R]]
[\f[B]\-output\f[R] \f[I]format\f[R]]
.SH DESCRIPTION
\f[B]pairstair\f[R] analyzes git commit history to show how often
developers have paired (committed together) over a configurable time
window, and recommends new pairs to maximize collaboration.
.PP
The tool scans commits in the specified time window, finds the author
and any co\-authors (from \(lqCo\-authored\-by\(rq trailers), and builds
a matrix showing how many days each pair has worked together.
.SH OPTIONS
.TP
\f[B]\-window\f[R] \f[I]window\f[R]
Set the time window to analyze.
Examples: \f[CR]1d\f[R] (1 day), \f[CR]2w\f[R] (2 weeks), \f[CR]3m\f[R]
(3 months), \f[CR]1y\f[R] (1 year).
Default: \f[CR]1w\f[R].
.TP
\f[B]\-output\f[R] \f[I]format\f[R]
Output format.
Options: \f[CR]cli\f[R] (default, prints to terminal), \f[CR]html\f[R]
(opens results in browser).
.SH TEAM FILE
If a \f[CR].team\f[R] file is present in the working directory, only
developers listed (one per line, as \f[CR]Name <email>\f[R]) are
included in the analysis.
If no \f[CR].team\f[R] file exists, all authors from the git history are
included.
.SH EXAMPLES
Analyze the last 4 weeks and show results in the terminal:
.IP
.EX
pairstair \-window 4w
.EE
.PP
Show results as HTML in your browser:
.IP
.EX
pairstair \-output html
.EE
.SH AUTHORS
Written by gypsydave5.
.SH SEE ALSO
\f[B]git\-log\f[R](1)
